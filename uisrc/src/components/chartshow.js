import React from 'react';
import {connect} from 'react-redux';
import {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';
import _ from 'lodash';

class ChartShow extends React.Component {
    componentWillMount () {

    }
    componentWillUnmount(){

    }
    componentDidMount () {
    }
    render() {
      // const data = [
      //       {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},
      //       {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},
      //       {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},
      //       {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},
      //       {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},
      //       {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},
      //       {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},
      // ];
      const datax = {"type":"x","data":[-508,-509,-507,-510,-511,-512,-512,-511,-512,-510,-512,-510,-506,-497,-485,-475,-466,-458,-446,-434,-424,-409,-396,-385,-375,-362,-348,-335,-321,-303,-294,-280,-267,-252,-240,-223,-206,-193,-179,-164,-148,-130,-114,-95,-80,-66,-54,-37,-21,-8,1,16,31,45,60,78,93,108,123,140,153,172,184,199,213,225,239,254,266,280,293,304,318,331,345,358,376,386,396,405,416,427,433,436,440,448,455,462,467,473,478,482,485,495,495,499,500,500,502,505,506,503,508,507,508,507,512,511,510,510,508,508,501,493,483,473,464,453,440,427,418,405,390,377,365,353,338,325,312,298,284,271,256,244,230,212,196,182,168,150,134,118,102,84,68,55,40,24,9,0,0,0,-43,-58,-71,-85,-103,-118,-134,-146,-162,-175,-192,-208,-221,-235,-248,-259,-271,-287,-299,-311,-323,-336,-350,-363,-379,-390,-400,-410,-419,-428,-434,-440,-442,-453,-458,-464,-468,-476,-481,-485,-492,-493,-497,-501,-503,-504,-506,-507]};
      const datay = {"type":"y","data":[0,0,0,33,41,37,25,19,28,39,40,33,32,47,72,96,109,107,102,103,113,125,127,227,712,882,673,725,778,695,755,794,756,784,810,814,840,857,864,872,873,902,949,970,968,928,876,861,873,877,855,864,900,956,1011,1036,1015,990,990,944,906,893,891,891,853,809,789,775,766,749,727,723,726,729,744,775,817,826,755,632,525,469,465,389,252,199,287,347,291,203,184,188,168,136,109,106,118,131,132,126,119,117,117,122,124,124,123,121,120,120,123,121,119,115,108,93,27,-125,-338,-346,-498,-528,-568,-633,-630,-633,-645,-663,-691,-698,-716,-719,-724,-722,-748,-787,-796,-819,-836,-828,-829,-861,-899,-913,-910,-876,-813,-794,-814,-803,-801,-826,-880,-948,-959,-930,-874,-852,-860,-842,-834,-811,-820,-805,-765,-741,-705,-699,-689,-667,-660,-651,-653,-650,-661,-688,-722,-714,-636,-524,-410,-380,-382,-275,-152,-135,-169,-159,-127,-98,-72,-48,-37,-34,-32,-32,-33,-11,0,0]};
      // let mapv = {};
      // _.map(datax.data,(v,index)=>{
      //   mapv[v] = datay.data[index];
      // });

      let data = [];
      // _.map(datax.data,(v,index)=>{
      //   data.push( { uv: datax.data[index], pv: datay.data[index], amt: index});
      // });

      // let mapvresult = [];
      let total = 0;
      _.map(datax.data,(v,index)=>{
        total = total+datay.data[index];
        // mapvresult.push({
        //   x:v,
        //   y:total
        // });

        data.push( { uv:v, pv: total, amt: index});
      });
      // let total = 0;
      // _.map(mapv,(v,index)=>{
      //   total = total+v;
      //   data.push( { uv:v, pv: total, amt: index});
      // })
        return (
          <LineChart width={600} height={300} data={data}
          margin={{top: 5, right: 30, left: 20, bottom: 5}}>
         <XAxis dataKey="name"/>
         <YAxis/>
         <CartesianGrid strokeDasharray="3 3"/>
         <Tooltip/>
           <Legend />
           <Line type="monotone" dataKey="pv" stroke="#8884d8" activeDot={{r: 8}}/>
           <Line type="monotone" dataKey="uv" stroke="#82ca9d" />
        </LineChart>
        );
    }
}

const mapStateToProps = () => {
  const datax = {
    "type":"x",
    "data":[0,-43,-57,-73,-86,-101,-118,-130,-148,-163,-177,-190,-205,-218,-233,-247,-261,-271,-284,-298,-309,-323,-335,-348,-361,-375,-387,-400,-409,-419,-429,-432,-437,-443,-451,-459,-465,-469,-472,-480,-486,-491,-493,-498,-500,-503,-504,
      -506,-508,-508,-509,-507,-510,-511,-512,-512,-511,-512,-510,-512,-510,-506,-497,-485,-475,-466,-458,-446,-434,-424,-409,-396,-385,-375,-362,-348,-335,-321,-303,-294,-280,-267,-252,-240,-223,-206,-193,-179,-164,-148,-130,-114,-95,-80,-66,-54,
      -37,-21,-8,1,16,31,45,60,78,93,108,123,140,153,172,184,199,213,225,239,254,266,280,293,304,318,331,345,358,376,386,396,405,416,427,433,436,440,448,455,462,467,473,478,482,485,495,495,499,
      500,500,502,505,506,503,508,507,508,507,512,511,510,510,
      508,508,501,493,483,473,464,453,440,427,418,405,390,377,365,353,338,325,312,298,284,271,256,244,230,212,196,182,168,150,134,118,102,84,68,55,40,24,9,0,0,0,-43,-58,-71,-85,-103,-118,-134,
      -146,-162,-175,-192,-208,-221,-235,-248,-259,-271,-287,-299,-311,-323,-336,-350,-363,-379,-390,-400,-410,-419,-428,-434,-440,-442,-453,-458,-464,-468,-476,-481,-485,-492,-493,-497,-501,-503,-504,-506,-507]
    };
  const datay = {
    "type":"y",
    "data":[0,-861,-941,-955,-916,-860,-839,-855,-838,-826,-808,-806,-809,-769,-739,-704,-687,-684,-667,-657,-651,-644,-649,-660,-680,-711,-706,-643,-534,-415,-372,-383,-291,-159,-139,-180,-168,-132,-105,-75,-48,-37,-34,-31,-32,-32,-22,
      0,0,0,0,0,33,41,37,25,19,28,39,40,33,32,47,72,96,109,107,102,103,113,125,127,227,712,882,673,725,778,695,755,794,756,784,810,814,840,857,864,872,873,902,949,970,968,928,876,
      861,873,877,855,864,900,956,1011,1036,1015,990,990,944,906,893,891,891,853,809,789,775,766,749,727,723,726,729,744,775,817,826,755,632,525,469,465,389,252,199,287,347,291,203,184,188,168,136,109,106,
      118,131,132,126,119,117,117,122,124,124,123,121,120,120,123,121,119,115,108,93,27,-125,-338,-346,-498,-528,-568,-633,-630,-633,-645,-663,-691,-698,-716,-719,-724,-722,-748,-787,-796,-819,-836,-828,-829,-861,-899,-913,-910,
      -876,-813,-794,-814,-803,-801,-826,-880,-948,-959,-930,-874,-852,-860,-842,-834,-811,-820,-805,-765,-741,-705,-699,-689,-667,-660,-651,-653,-650,-661,-688,-722,-714,-636,-524,-410,-380,-382,-275,-152,-135,-169,-159,-127,-98,-72,-48,-37,-34,
      -32,-32,-33,-11,0,0]
  };

  let mapv = {};
  _.map(datax.data,(v,index)=>{
    mapv[v] = datay.data[index];
  });
  return {mapv};
};

// export default connect(mapStateToProps)(ChartShow);

export default ChartShow;
